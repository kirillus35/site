-- phpMyAdmin SQL Dump
-- version 2.8.2.4
-- http://www.phpmyadmin.net
-- 
-- Хост: localhost
-- Время создания: Авг 30 2012 г., 11:46
-- Версия сервера: 5.0.24
-- Версия PHP: 5.1.6
-- 
-- БД: `site`
-- 

-- --------------------------------------------------------

-- 
-- Структура таблицы `class`
-- 

CREATE TABLE `class` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(255) NOT NULL,
  `link` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

-- 
-- Дамп данных таблицы `class`
-- 

INSERT INTO `class` VALUES (1, 'Кирилл Кузнецов', 'http://vk.com/kirillus35');
INSERT INTO `class` VALUES (2, 'Кукушкин Тимофей', 'http://vk.com/fletcher35');
INSERT INTO `class` VALUES (3, 'Полина старикова', 'http://vk.com/starikova_polya');

-- --------------------------------------------------------

-- 
-- Структура таблицы `link`
-- 

CREATE TABLE `link` (
  `id` int(11) NOT NULL auto_increment,
  `title` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

-- 
-- Дамп данных таблицы `link`
-- 

INSERT INTO `link` VALUES (1, 'Мы Вконтакте', 'http://vk.com/club22080532');
INSERT INTO `link` VALUES (2, 'Электронный дневник', 'https://www.schoolconnect.ru/');
INSERT INTO `link` VALUES (3, 'Полезные материалы', 'http://godoza.ru/');

-- --------------------------------------------------------

-- 
-- Структура таблицы `menu`
-- 

CREATE TABLE `menu` (
  `id` int(11) NOT NULL auto_increment,
  `title` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

-- 
-- Дамп данных таблицы `menu`
-- 

INSERT INTO `menu` VALUES (1, 'Наш состав', 'class');
INSERT INTO `menu` VALUES (2, 'Расписание', 'timetable');
INSERT INTO `menu` VALUES (3, 'Поездки', 'travels');
INSERT INTO `menu` VALUES (4, 'Новости', 'news');
INSERT INTO `menu` VALUES (5, 'Полезные ссылки', 'link');

-- --------------------------------------------------------

-- 
-- Структура таблицы `news`
-- 

CREATE TABLE `news` (
  `id` int(11) NOT NULL auto_increment,
  `date` datetime NOT NULL,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

-- 
-- Дамп данных таблицы `news`
-- 

INSERT INTO `news` VALUES (1, '2012-08-26 18:49:30', 'Новости', 'Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз \r\n<br>связался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью.\r\n\r\nВот те вопросы, которые мы обсудим в этой статье:\r\n\r\n    Получение текущего времени и даты, какие у нас есть возможности?\r\n    Изменение вида отображаемой даты - форматирование даты и времени;\r\n    Конвертирование существующих дат в UNIX время;\r\n    Назад в будущее - модификация даты\r\n        Добавление времени к текущей дате\r\n        Вывод времени из текущей даты\r\n        Получение времени между двумя датами \r\n    Создание функции DateAdd для PHP;\r\n    Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. ');
INSERT INTO `news` VALUES (2, '2012-08-29 14:13:07', 'Электронный дневник', 'Свойство background-size определяет ширину и высоту фонового изображения.\r\n\r\nЕсли задана только одна величина, другая по умолчанию будет иметь значение auto.\r\nДопустимые значения\r\n\r\n    <величина> — ширина и высота фонового изображения в прямом виде\r\n    <процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.\r\n    contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.\r\n    cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.\r\n    auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.\r\nСвойство background-size определяет ширину и высоту фонового изображения.\r\n\r\nЕсли задана только одна величина, другая по умолчанию будет иметь значение auto.\r\nДопустимые значения\r\n\r\n    <величина> — ширина и высота фонового изображения в прямом виде\r\n    <процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.\r\n    contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.\r\n    cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.\r\n    auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.\r\nСвойство background-size определяет ширину и высоту фонового изображения.\r\n\r\nЕсли задана только одна величина, другая по умолчанию будет иметь значение auto.\r\nДопустимые значения\r\n\r\n    <величина> — ширина и высота фонового изображения в прямом виде\r\n    <процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.\r\n    contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.\r\n    cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.\r\n    auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.\r\n');
INSERT INTO `news` VALUES (3, '2012-08-29 14:14:59', 'Наш состав', 'Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз \r\n<br>связался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью.\r\n\r\nВот те вопросы, которые мы обсудим в этой статье:\r\n\r\n    Получение текущего времени и даты, какие у нас есть возможности?\r\n    Изменение вида отображаемой даты - форматирование даты и времени;\r\n    Конвертирование существующих дат в UNIX время;\r\n    Назад в будущее - модификация даты\r\n        Добавление времени к текущей дате\r\n        Вывод времени из текущей даты\r\n        Получение времени между двумя датами \r\n    Создание функции DateAdd для PHP;\r\n    Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. Как то раз, когда я писал некое подобие программы управления центром поддержки, я заметил, что мне нужно посчитать, сколько времени прошло с того момента, когда кто то в последний раз\r\nсвязался с клиентом насчет решения его проблемы. В прошлом, когда я пользовался ASP, решение было простым - в ASP есть функция DateDiff, которая берет две даты и может сказать вам сколько секунд прошло между ними, сколько дней, месяцев и т.д. После просмотра некоторых вспомогательных изданий (то есть мануалов) по PHP, я заметил, что у него нету такой функции. Тогда я и решил написать эту статью. Вот те вопросы, которые мы обсудим в этой статье: Получение текущего времени и даты, какие у нас есть возможности? Изменение вида отображаемой даты - форматирование даты и времени; Конвертирование существующих дат в UNIX время; Назад в будущее - модификация даты Добавление времени к текущей дате Вывод времени из текущей даты Получение времени между двумя датами Создание функции DateAdd для PHP; Создание функции DateDiff для PHP. ');

-- --------------------------------------------------------

-- 
-- Структура таблицы `photo`
-- 

CREATE TABLE `photo` (
  `id` int(11) NOT NULL auto_increment,
  `album_id` int(11) NOT NULL,
  `content` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 AUTO_INCREMENT=5 ;

-- 
-- Дамп данных таблицы `photo`
-- 

INSERT INTO `photo` VALUES (1, 1, 'Тут мы фоткаемся у.....');
INSERT INTO `photo` VALUES (2, 1, 'Тут мы.....');
INSERT INTO `photo` VALUES (3, 1, 'мы.....');
INSERT INTO `photo` VALUES (4, 2, 'мы.....');

-- --------------------------------------------------------

-- 
-- Структура таблицы `timetable`
-- 

CREATE TABLE `timetable` (
  `id` int(11) NOT NULL auto_increment,
  `time` varchar(255) NOT NULL,
  `Monday` varchar(255) NOT NULL,
  `Tuesday` varchar(255) NOT NULL,
  `wednesday` varchar(255) NOT NULL,
  `Thursday` varchar(255) NOT NULL,
  `Friday` varchar(255) NOT NULL,
  `Saturday` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

-- 
-- Дамп данных таблицы `timetable`
-- 

INSERT INTO `timetable` VALUES (1, '8:00 - 8:40', 'Алгебра', 'Англ.яз', 'Литература', 'Русский', 'Физкультура', 'Информатика');
INSERT INTO `timetable` VALUES (2, '8:50 - 9:30', 'Химия', 'История', 'География', 'Обществознание', 'Изо', 'Черчение');

-- --------------------------------------------------------

-- 
-- Структура таблицы `travels`
-- 

CREATE TABLE `travels` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(255) NOT NULL,
  `content` text NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

-- 
-- Дамп данных таблицы `travels`
-- 

INSERT INTO `travels` VALUES (1, 'Валаам', ' font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px; font-size: 17px;');
INSERT INTO `travels` VALUES (2, 'Валаам', ' border-bottom: 1px solid #D0C7B7; border-bottom: 1px solid #D0C7B7; border-bottom: 1px solid #D0C7B7; border-bottom: 1px solid #D0C7B7;');
